#!/usr/bin/env bash
set -euo pipefail

# Auto theme switcher: pick a theme, update current, render, link, reload.
# Usage: switch-theme.sh [theme]

# Resolve directories
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
base_dir="$script_dir/.."
themes_dir="$base_dir/themes"
scripts_dir="$script_dir"
dotfiles_dir="$base_dir/dotfiles"

# Gather available themes
mapfile -t themes < <(
  find "$themes_dir" -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort
)
if [[ ${#themes[@]} -eq 0 ]]; then
  echo "❌ No themes found in $themes_dir"
  exit 1
fi

# Determine which theme to use
if [[ $# -ge 1 ]]; then
  THEME="$1"
  [[ -d "$themes_dir/$THEME" ]] || { echo "❌ Unknown theme: $THEME"; exit 1; }
else
  echo "Available themes:"
  for i in "${!themes[@]}"; do
    printf "  %3d) %s\n" "$((i+1))" "${themes[i]}"
  done
  while true; do
    read -p "Select theme [1-${#themes[@]}]: " choice
    if [[ "$choice" =~ ^[0-9]+$ ]] && (( choice>=1 && choice<=${#themes[@]} )); then
      THEME="${themes[choice-1]}"
      break
    fi
    echo "Invalid selection."
  done
fi

echo "🌈 Switching to theme: $THEME"

# 1) Update the 'current' symlink
ln -sfn "$themes_dir/$THEME" "$themes_dir/current"
echo "📝 Updated themes/current → $THEME"

# 2) Render all dotfiles for the current theme
"$scripts_dir/render-dotfiles.sh"

# 3) Link rendered files into $HOME
"$scripts_dir/link-dotfiles.sh"

# 4) Reload Hyprland
echo "🔄 Reloading Hyprland..."
hyprctl reload || echo "⚠️ hyprctl not found or failed"

# 5) Restart Waybar
echo "🛑 Restarting Waybar..."
if pgrep -x waybar &>/dev/null; then
  killall waybar
  sleep 0.5
fi
waybar & disown

# 6) Reload Mako notifications
echo "🔔 Reloading Mako..."
if pgrep -x mako &>/dev/null; then
  killall -SIGUSR1 mako
fi

echo "✅ Theme switched to $THEME."

